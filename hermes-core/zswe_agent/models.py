from pydantic import BaseModel, Field
from typing import List, Optional

class TestCase(BaseModel):
    """
    Represents a single test case generated by the ReviewerAgent.
    """
    file_path: str = Field(..., description="The path to the test file where this test should be saved.")
    code: str = Field(..., description="The Python code for the test case.")

class CodeReview(BaseModel):
    """
    Represents the outcome of a code review.
    """
    approved: bool = Field(..., description="Whether the code is approved or not.")
    critique: Optional[str] = Field(None, description="The critique or list of issues if not approved.")

class DevelopmentTask(BaseModel):
    """
    Represents the code generated by the DeveloperAgent.
    """
    file_path: str = Field(..., description="The path to the implementation file.")
    code: str = Field(..., description="The implemented Python code.")
